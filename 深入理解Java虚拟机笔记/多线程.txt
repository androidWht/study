1 java在语言级别支持多线程
2 java使用的同步机制叫监视器，支持线程互斥和协作。
3 java虚拟机通过对象锁来实现互斥，允许线程独享数据。通过Object类的wait和notify方法实现线程协作。
4 监视区域：监视器相关联的代码。
5 监视器模型
	1 入口区：所有需要获取监视器的线程(执行监视区域代码)会在入口区排队等待
	2 执行区：获取并独占监视器
	3 等待区：所有执行了wait命令的线程会进入到等待区。线程暂停，放弃监视器。
			  处于等待区的线程只有执行了notify命令或等待超时才可被唤醒，再次参与监视器竞争。
6 Object.wait 使当前线程在当前监视器(Object实例)等待
  Object.notify 随意唤醒当前监视器上处于等待的线程
  Object.notifyAll 唤醒所有在当前监视器上等待的线程。  
7 Java虚拟机为每个对象都关联了一个锁。线程访问实例变量和类变量不需要获取锁，但如果线程获取了锁，
  另一个线程就不能同时获取这个锁。  
8 Java锁是引用计数的，获取锁加1，释放锁减1，只有当计数为0时，才真正的释放了锁。  
8 字节码：monitorenter monitorexit