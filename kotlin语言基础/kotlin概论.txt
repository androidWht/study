1 kotlin定义
* kotlin是一种针对java平台的新编程语言。kotlin简洁，安全，务实，并且专注于与java代码互操作性。
* kotlin几乎可以用在现在java使用的任何地方：服务器开发，Android应用等等。
* kotlin可以很好的与现存的java库和框架一起工作，而且性能水平和java旗鼓相当。

2 kotlin目标
* kotlin的首要目标是提供一种更简洁，高效，安全的替代java的语言，并且适用于现今使用java的所有环境。
* kotlin常用场景：服务器，Android设备移动应用。
* kotlin还可以编译成JavaScript，允许在浏览器中运行kotlin代码。

3 kotlin主要特性
静态类型
* 和java一样kotlin是一种静态类型的编程语言。这意味着所有表达式的类型在编译期已经确定了，编译期就能验证对象是否包含了你想访问的方法和字段。
* 动态类型编程语言，允许你定义可以存储任何数据类型的变量，或者方法任何数据类型的函数，并在运行时才解析方法和字段引用。
   这减少了代码量并增加创建数据结构的灵活性。缺点是编译期不能发现许多问题，导致运行时错误。
* kotlin不需要在源代码中显示声明每个变量的类型。编译期具有根据上下文类型推导的能力。
* kotlin支持可空类型，通过在编译期检查可能存在的空指针异常，可以减少运行时空指针异常。
* kotlin支持函数类型。

函数式和面向对象
* 函数式编程核心概念。
   1 头等函数-把函数当做值使用，可以用变量保存它，把它当做参数传递，或者函数返回值。 
   2 不可变性-使用不可变对象，保证它们的状态在创建后不能再改变。
   3 无副作用-使用纯函数。此类函数在输入相同的时候产生相同的结果，并且不会修改其他对象的状态，也不会和外面世界交互。
* 函数式编程更简洁优雅，把函数当做值传递可以获取更强大的抽象能力，避免重复代码。
  函数式编程多线程安全。
  函数式编程更容易测试。
* kotlin支持函数类型，允许函数接受其他函数作为参数，返回其他函数。
  kotlin支持lambda表达式，让你用最少的样板代码方便传递代码块。
  kotlin提供数据类型，提供了创建不可变对象的简明语法。
  kotlin标准库包括了丰富的API，让你用函数式编程风格操作对象和集合。







