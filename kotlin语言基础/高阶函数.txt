1 定义
高阶函数就是以另一个函数作为参数或者返回值的函数。
kotin中可以用lambda或者函数引用来表示。因此任何以lambda或者函数引用作为参数的函数，或者返回值为lambda或函数引用都是高阶函数。

2 函数类型
* 声明 (V)->R
* 调用 加()调用，或者invoke调用。
* 函数类型被编译成函数式接口。Kotlin标准库中定义了一系列的接口Function。接口定义了一个invoke方法。

3 内联。消除lambda带来的运行时开销。
* lambda表达式会被编译成匿名内部类，每次调用都会创建额外的类，如果lambda捕获了变量，每次调用都需要创建新的对象。这带来了额外的开销。
* 使用inline修饰符标记一个函数，函数会被内联。
* 内联函数的限制。作为参数的lambda表达式的函数体会被直接替换到最终生成的代码中，这将限制函数体中对于的lambda参数的使用。
  如果lambda参数被调用，这样的代码很容易被内联，但如果lambda参数在某个地方被保存起来，lambda表达式将不能被内联，因为必须
  要有一个包含这些代码的对象存在。一般来说lambda参数被直接调用或者作为参数传递给另外一个inline函数，它是可以被内联的。否则，
  编译器会禁止参数参与内联。
* 对于普通函数调用，jvm已经提供了强大的内联支持，它会分析代码的执行，并在任何通过内联能够带来好处的时候将函数调用内联。
   只有将带有lambda参数的函数内联才能打来函数，通过内联避免的运行时开销更明显。不仅节约了函数调用的开销，而且节约了创建匿名类和
   对象的开销。你练可以使用一些不能被普通lambda使用的特性，比如非局部返回。

4 高阶函数中的控制流
* 在lambda中使用return关键词，它会从调用者lambda的函数中返回，并不只是从lambda中返回。这样的return语句叫做非局部返回。
* 需要注意的是，只有在以lambda作为参数是内联函数的时候才可以return非局部返回。
* 在lambda中使用局部返回。局部返回跳出lambda代码块，接着从lambda调用处执行。return@[label] laber可以自定义或者使用函数名。














