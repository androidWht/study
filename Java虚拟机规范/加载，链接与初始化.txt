1 概论
* Java虚拟机动态加载，链接与初始化类和接口。
* 加载是根据特定名称查找类或接口类型的二进制表示(binary representation)，并由此二进制表示来创建类或接口的过程。
* 链接是为了让类或接口可以被java虚拟机执行，而将类或接口并入虚拟机运行时状态的过程。
* 类或接口的初始化是指执行类或接口的初始化方法<clinit>。

2 运行时常量
* java虚拟机为每个类型都维护者一个常量池。该常量池是Java虚拟机中的运行时数据结构，像传统编程语言实现中的符号表一样有很多用途。
* 当类或接口创建时，它的二进制表示中的常量表被用来构造运行时常量池。运行时常量池中所有引用最初都是符号引用。
* 常量池中的符号是从类或接口的二进制表示中得到的。
  1 某个类或接口的符号引用来自于类或接口的二进制表示中的CONSTANT_Class_info结构。这种引用提供的类或接口名称，其格式与Class.getName方法返回值一样。
     * 对于非数组的类或接口，此名称是类或接口的二进制名称
     * 对于一个n维的数组类，名称会以n个ASCII字符[开头，随后是数组元素类型的表示。
     * 如果数组的元素是java原生类型之一，那就以相应的字段描述符来表示
     * 否则，如果数组元素类型是某种引用类型，那就以ASCII字符L加上二进制名称，并以ASCII字符；结尾的字符串表示。
   2 类或接口某个字段的符号引用来自于类或接口二进制表示中的CONSTANT_Fieldref_info结构。这种引用包含了字段的名称和描述符，以及指向字段所属类或接口的符号引用。
   3 类中某个方法的符号引用来自于类或接口二进制表示中的CONSTANT_Methodref_info结构。这种引用包含了方法和描述符，以及指向方法所属类的符号引用。
   3 接口中的某个方法来自类或接口二进制表示中的CONSTANT_InterfaceMethodref_info结构。这种引用包含了接口方法的名称和描述符，以及指向方法所属接口的符号引用。
